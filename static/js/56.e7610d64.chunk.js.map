{"version":3,"file":"static/js/56.e7610d64.chunk.js","mappings":"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","sources":["pages/guides/worldmap/WorldmapInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport normalData from './normal.json';\nimport hardData from './hard.json';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n  font-family: CustomFont;\n`;\n\nconst PageTitle = styled.p`\n  font-size: 20px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nconst PageSubTitle = styled.p`\n  font-size: 13px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SearchInput = styled.input`\n  padding: 10px;\n  font-size: 14px;\n  width: 20%;\n  background-color: #D8D8D8;\n  border: none;\n  border-radius: 10px;\n`;\n\nconst SelectBox = styled.select`\n  padding: 5px;\n  font-size: 14px;\n  font-family: 'CustomFont';\n  border: none;\n  background-color: #D8D8D8;\n  position: relative;\n  border-radius: 8px;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-ms-expand {\n    display: none;\n  }\n`;\n\nconst Option = styled.option`\n  background: #f0f0f0;\n  font-size: 14px;\n  font-family: 'CustomFont';\n  padding: 10px;\n  position: absolute;\n  &:hover {\n    background: #e0e0e0;\n  }\n`;\n\nconst ChapterContainer = styled.div`\n  margin-top: 3%;\n`;\n\nconst ChapterHeader = styled.div`\n  background: #ddd;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 10px;\n  cursor: pointer;\n`;\n\nconst ChapterContent = styled.div`\n  background: #f9f9f9;\n  padding: 10px;\n  display: ${props => (props.isOpen ? 'block' : 'none')};\n  border-radius: 0px 0px 10px 10px;\n`;\n\nconst GuideList = styled.div`\n  margin-top: 10px;\n`;\n\nconst GuideItem = styled.div`\n  background: #fff;\n  padding: 10px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  border-radius: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst GuideContent = styled.div`\n  margin-top: 5px;\n  padding: 10px;\n  background: #e9e9e9;\n  border-radius: 10px;\n  display: ${props => (props.isOpen ? 'block' : 'none')};\n  font-size: 13px;\n`;\n\nconst WorldmapInfo = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [openChapters, setOpenChapters] = useState({});\n  const [selectedMaps, setSelectedMaps] = useState({});\n  const [openGuides, setOpenGuides] = useState({});\n  const [chapters, setChapters] = useState([]);\n  const [difficulty, setDifficulty] = useState('normal');\n\n  useEffect(() => {\n    loadData(difficulty);\n  }, [difficulty]);\n\n  useEffect(() => {\n    if (searchTerm) {\n      const filteredChapters = chapters.filter(chapter =>\n        chapter.maps.some(map => map.id === searchTerm)\n      );\n\n      if (filteredChapters.length > 0) {\n        const chapter = filteredChapters[0];\n        setOpenChapters({ [chapter.id]: true });\n        setSelectedMaps({ [chapter.id]: searchTerm });\n      }\n    }\n  }, [searchTerm, chapters]);\n\n  const loadData = (type) => {\n    if (type === 'normal') {\n      setChapters(normalData.chapters);\n    } else if (type === 'hard') {\n      setChapters(hardData.chapters);\n    }\n    setSelectedMaps({});\n    setOpenGuides({});\n    setOpenChapters({});\n  };\n\n  const handleChapterClick = (chapterId) => {\n    setOpenChapters((prev) => ({\n      ...prev,\n      [chapterId]: !prev[chapterId],\n    }));\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleMapChange = (chapterId, event) => {\n    const mapId = event.target.value;\n    setSelectedMaps((prev) => ({\n      ...prev,\n      [chapterId]: mapId,\n    }));\n    setOpenGuides({}); // 지도 변경 시 모든 가이드 닫기\n  };\n\n  const handleGuideClick = (chapterId, mapId, type) => {\n    const guideKey = `${chapterId}-${mapId}-${type}`;\n    setOpenGuides((prev) => ({\n      ...prev,\n      [guideKey]: !prev[guideKey],\n    }));\n  };\n\n  const handleDifficultyChange = (event) => {\n    setDifficulty(event.target.value);\n  };\n\n  const getGuideContent = (chapterId, mapId, type) => {\n    const chapter = chapters.find(c => c.id === chapterId);\n    if (chapter) {\n      const map = chapter.maps.find(m => m.id === mapId);\n      return map?.strategies[type] || '정보 없음';\n    }\n    return '정보 없음';\n  };\n\n  const filteredChapters = chapters.filter(chapter =>\n    chapter.maps.some(map => map.id.includes(searchTerm))\n  );\n\n  return (\n    <PageContainer>\n      <SearchContainer>\n        <PageTitle>월드 탐험</PageTitle>\n        <SearchInput\n          type=\"text\"\n          placeholder=\"ex) 4-1\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n        />\n      </SearchContainer>\n      <PageSubTitle>공략을 알고 싶은 챕터와 맵을 선택 혹은 검색하세요!</PageSubTitle>\n      <SelectBox onChange={handleDifficultyChange}>\n        <Option value='normal'>일반</Option>\n        <Option value='hard'>하드</Option>\n      </SelectBox>\n      {filteredChapters.map((chapter) => (\n        <ChapterContainer key={chapter.id}>\n          <ChapterHeader onClick={() => handleChapterClick(chapter.id)}>\n            <span>{chapter.name}</span>\n          </ChapterHeader>\n          <ChapterContent isOpen={openChapters[chapter.id]}>\n            <SelectBox onChange={(e) => handleMapChange(chapter.id, e)} value={selectedMaps[chapter.id] || ''}>\n              <Option value=\"\" disabled>맵 선택</Option>\n              {chapter.maps.map((map) => (\n                <Option key={map.id} value={map.id}>\n                  {map.id}\n                </Option>\n              ))}\n            </SelectBox>\n            {selectedMaps[chapter.id] && (\n              <GuideList>\n                {['3-star', 'jelly', 'treasure'].map(type => (\n                  <div key={type}>\n                    <GuideItem onClick={() => handleGuideClick(chapter.id, selectedMaps[chapter.id], type)}>\n                      <span>{type === '3-star' ? '3성 공략' : type === 'jelly' ? '곰젤리 위치' : '보물상자 위치'}</span>\n                    </GuideItem>\n                    <GuideContent isOpen={openGuides[`${chapter.id}-${selectedMaps[chapter.id]}-${type}`]}>\n                      <div dangerouslySetInnerHTML={{ __html: getGuideContent(chapter.id, selectedMaps[chapter.id], type) }} />\n                    </GuideContent>\n                  </div>\n                ))}\n              </GuideList>\n            )}\n          </ChapterContent>\n        </ChapterContainer>\n      ))}\n    </PageContainer>\n  );\n};\n\nexport default WorldmapInfo;\n"],"names":["PageContainer","styled","div","_templateObject","_taggedTemplateLiteral","PageTitle","p","_templateObject2","PageSubTitle","_templateObject3","SearchContainer","_templateObject4","SearchInput","input","_templateObject5","SelectBox","select","_templateObject6","Option","option","_templateObject7","ChapterContainer","_templateObject8","ChapterHeader","_templateObject9","ChapterContent","_templateObject10","props","isOpen","GuideList","_templateObject11","GuideItem","_templateObject12","GuideContent","_templateObject13","WorldmapInfo","searchTerm","setSearchTerm","useState","openChapters","setOpenChapters","selectedMaps","setSelectedMaps","openGuides","setOpenGuides","chapters","setChapters","difficulty","setDifficulty","useEffect","loadData","filteredChapters","filter","chapter","maps","some","map","id","length","type","normalData","hardData","getGuideContent","chapterId","mapId","find","c","m","strategies","includes","_jsxs","children","_jsx","placeholder","value","onChange","event","target","onClick","handleChapterClick","prev","name","e","handleMapChange","disabled","handleGuideClick","guideKey","concat","dangerouslySetInnerHTML","__html"],"sourceRoot":""}